---
title: "[Notes] Linkedin Learning: Git"
author: "Aidan Leib"
format: pdf
toc: true

---

# Working with git

## Version Control

* Allows you to track changes
* project history
* backup and restore

### Collaboration

* allows devs to share code
* can track who did what and when

### Centralized Version control

* storage of files and logs in a centralized server
* retrieval from server
* E.x: Apache sub version or SVN

### Distributed Version COntrol

* Cloning code on own machine
* local version = "working copy"
* push/pull copies to main repo

## WHat is git?

* version control (like a time machine except you can change history)
* check points are like commits
* You can branch which is like multiverses without affecting the original history
* Merging branches or synchronizing the code

## Git environments

* HEAD always points to the current reality/branch

### 3 places to move files

* Working -- files look like what they did in previous commit
* Staging -- a way to queue up changes before committing (`add`)
* Committing -- once moved using this, a new log entry is created

### File states

* tracked -- anyhting staged that is different than last commit
* untracked files -- anything else

### tracked files

* unmodified
* modified
* staged -- moved into staging environment

### Restoring files

Used to discard any 'staged' changes of files

* `git restore <filename>` -- restore a file
* `git restore .` -- restore entire directory


